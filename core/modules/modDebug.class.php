<?php

/**
 * Copyright (C) 2025 Idayat Noufou  <contact@dev2a.pro>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <https://www.gnu.org/licenses/>.
 */

/**
 * This file was generated by DAMB
 *
 * @copyright   Copyright (c) 2019 - 2020, AXeL-dev
 * @license     GPL
 * @link        https://github.com/AXeL-dev/damb
 */

// Load DolibarrModules class
include_once DOL_DOCUMENT_ROOT.'/core/modules/DolibarrModules.class.php';

// Load module lib
dol_include_once('debug/lib/module.lib.php');

/**
 * Class to describe and enable module
 */
class modDebug extends DolibarrModules
{
    /**
     * Constructor. Define names, constants, directories, boxes, permissions
     *
     * @param      DoliDB      $db      Database handler
     */
    public function __construct($db)
    {
        // Module configuration
        $this->db              = $db;
        $this->editor_name = 'Artis Auxilium';
        $this->editor_url = 'https://artis-auxilium.fr/';
        $this->numero          = 507000;
        $this->rights_class    = 'debug';
        $this->family          = 'other';
        $this->module_position = 500;
        $this->name            = preg_replace('/^mod/i', '', get_class($this));
        $this->description     = 'DebugDescription';
        $this->picto           = 'debug.png@debug';
        $this->version         = '1.0.0';
        $this->const_name      = get_constant_name($this);

        // Module parts (css, js, ...)
        $this->module_parts    = array(
            'css'   => array(),
            'js'    => array(),
            'hooks' => array('main'),
            //'triggers' => 1,
        );

        // Config page
        $this->config_page_url = array('setup.php@debug');

        // Dependencies
        $this->need_dolibarr_version = array(3, 8);
        $this->phpmin                = array(4, 0);
        $this->depends               = array();
        $this->requiredby            = array();
        $this->conflictwith          = array();
        $this->langfiles             = array('debug@debug');

        // Menus
        // $top_menu = 'debug';
        // add_top_menu($this, $top_menu, 'Debug', '/debug/index.php');
        // add_left_menu($this, $top_menu, 'debugmenu', 'Index', '/debug/index.php');
        // add_left_submenu($this, $top_menu, 'debugmenu', 'debugnew', 'New', '/debug/card.php?action=create');
        // add_left_submenu($this, $top_menu, 'debugmenu', 'debuglist', 'List', '/debug/list.php');

        // Permissions
        // add_permission($this, 'read', 'ReadPermission', 'r');
        // add_permission($this, 'create', 'CreatePermission', 'c');
        // add_permission($this, 'modify', 'ModifyPermission', 'm');
        // add_permission($this, 'delete', 'DeletePermission', 'd');
    }

    /**
     * Function called when module is enabled.
     * The init function add constants, boxes, permissions and menus
     * (defined in constructor) into Dolibarr database.
     * It also creates data directories
     *
     * @param string $options Options when enabling module ('', 'noboxes')
     * @return int 1 if OK, 0 if KO
     */
    public function init($options = '')
    {
        // Load module tables
        $result = $this->_load_tables('/debug/sql/');

        return $this->_init(array(), $options);
    }

    /**
     * Function called when module is disabled.
     * Remove from database constants, boxes and permissions from Dolibarr database.
     * Data directories are not deleted
     *
     * @param string $options Options when enabling module ('', 'noboxes')
     * @return int 1 if OK, 0 if KO
     */
    public function remove($options = '')
    {
        return $this->_remove(array(), $options);
    }
}
